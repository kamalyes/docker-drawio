name: Docker Image CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  schedule:
    - cron: "09 09 * * 1"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: kamalyes/drawio
      HTTP_PORT: 8080
      HTTPS_PORT: 8443
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          # Get draw.io current latest version
          wget https://raw.githubusercontent.com/jgraph/drawio/master/VERSION
          export DRAWIO_VERSION=`cat VERSION`
          DOCKER_IMAGE=${{env.DOCKER_IMAGE}}
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          TAG_NAME=${DRAWIO_VERSION}
          DOCKER_IMAGE_TAGS="--tag ${DOCKER_IMAGE}:${DRAWIO_VERSION}"
          echo "Docker Image Tags: ${DOCKER_IMAGE_TAGS}"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${TAG_NAME}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${TAG_NAME} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${DOCKER_IMAGE_TAGS} .

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Docker Buildx (build)
        run: |
          docker buildx build --file Dockerfile --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Docker Buildx (push)
        run: |
          docker buildx build --file Dockerfile --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Docker Run Test
        run: |
          #With platform build, the images are not stored locally, so we test the image after pushing it
          docker run --name "drawio" -d -p ${{env.HTTP_PORT}}:8080 -p ${{env.HTTPS_PORT}}:8443 ${{env.DOCKER_IMAGE}}:${{ steps.prepare.outputs.version }}
          sleep 10
          docker logs drawio
          docker exec drawio /bin/bash -c "curl -i http://localhost:8080"
